/home/cc/miniconda/lib/python3.12/site-packages/langchain/tools/__init__.py:63: LangChainDeprecationWarning: Importing tools from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.tools import DuckDuckGoSearchRun`.

To install langchain-community run `pip install -U langchain-community`.
  warnings.warn(
2024-06-19 14:20:58,137 - 139989611587136 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.4s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:58,159 - 139989603194432 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.9s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:58,220 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.4s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:58,244 - 139989586409024 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.4s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:58,510 - 139989611587136 - _common.py-_common:105 - INFO: Backing off send_request(...) for 1.8s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:58,603 - 139989586409024 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.6s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:58,666 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.9s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:59,094 - 139989603194432 - _common.py-_common:105 - INFO: Backing off send_request(...) for 1.0s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:59,191 - 139989586409024 - _common.py-_common:105 - INFO: Backing off send_request(...) for 3.7s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:20:59,557 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 2.2s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:21:00,064 - 139989603194432 - _common.py-_common:105 - INFO: Backing off send_request(...) for 3.9s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:21:00,349 - 139989611587136 - _common.py-_common:105 - INFO: Backing off send_request(...) for 2.8s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:21:01,789 - 139989594801728 - _common.py-_common:120 - ERROR: Giving up send_request(...) after 4 tries (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:21:02,903 - 139989586409024 - _common.py-_common:120 - ERROR: Giving up send_request(...) after 4 tries (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:21:03,190 - 139989611587136 - _common.py-_common:120 - ERROR: Giving up send_request(...) after 4 tries (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:21:03,948 - 139989603194432 - _common.py-_common:120 - ERROR: Giving up send_request(...) after 4 tries (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
{'agents': [{'name': 'video_processor', 'role': 'Video Processor', 'goal': 'Extract audio from video and convert it to text using Whisper', 'backstory': 'You are an expert in handling multimedia files. Your primary task is to process video files and accurately transcribe the audio content into text.\n', 'verbose': True, 'allow_delegation': False, 'tools': ['whisper_translate_audio']}, {'name': 'text_summarizer', 'role': 'Text Summarizer', 'goal': 'Summarize transcribed text using RAG (Retrieval-Augmented Generation)', 'backstory': 'You specialize in analyzing and summarizing large volumes of text. Your goal is to distill the most important information from the transcribed text.\n\nIf the current article exceeds 7,000 words, divide it into smaller chunks and then proceed with the query.\n', 'verbose': True, 'allow_delegation': False, 'tools': ['TXTSearchTool']}], 'tasks': [{'description': "Extract audio from the provided video file and transcribe it to text using Whisper. Ensure that the transcription is accurate and complete. Save the transcription to a file.\n\naudio_file: '/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/input/Apple Intelligence in 5 minutes.mp3'\nmodule_file: 'medium'\nlanguage: English\nsave_file: '/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt'\n", 'expected_output': 'Transcribed text from video saved to file', 'agent': 'video_processor', 'max_inter': 1}, {'description': "Using RAG, summarize the text. Ensure the summary captures the key points and relevant details from the content. Finally, produce a well-organized and comprehensive article.\nuse TXTSearchTool tool rag  \nIf there are a lot of repetitions, only the meaningful text is summarized.(For example, the key words and their meanings,combined with your own understanding)  All steps are in English\nfile_path:  '/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt'\n", 'expected_output': 'Summarized text to report ', 'agent': 'text_summarizer', 'max_inter': 1}], 'model': {'model_api_key': '', 'model_name': 'gpt-4', 'model_max_tokens': 2048, 'module_api_url': None}, 'other': {'proxy_url': 'http://192.168.0.75:10809'}, 'env': {'SERPER_API_KEY': '2e4d9ef16c251219c58cb2b04509d626e43b09c1'}, 'crewai_config': {'memory': True}}
[1m[95m [DEBUG]: == Working Agent: Video Processor[00m
[1m[95m [INFO]: == Starting Task: Extract audio from the provided video file and transcribe it to text using Whisper. Ensure that the transcription is accurate and complete. Save the transcription to a file.

audio_file: '/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/input/Apple Intelligence in 5 minutes.mp3'
module_file: 'medium'
language: English
save_file: '/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt'
[00m


[1m> Entering new CrewAgentExecutor chain...[0m
[32;1m[1;3mI need to use the whisper_translate_audio function to transcribe the audio file into text. The inputs for the function will be the provided audio file, module file, language, and save file.

Action: whisper_translate_audio
Action Input: {"audio_file": "/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/input/Apple Intelligence in 5 minutes.mp3", "module_file": "medium", "language": "English", "save_file": "/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt"}[0m[95m 

 Apple Intelligence in five minutes. It's personal intelligence right where you need it, on your Mac, iPad, and iPhone. Writing tools are an example of the incredible power of Apple Intelligence. Say you're writing an email. You can change the tone to make it sound more friendly, professional, or concise. Another way writing tools can help you is with proofread. With proofread, you can nail the grammar, word choice, and sentence structure. If you've rambled on in your email, bring out the key points and add them as a TLDR. Apple Intelligence is also great when it comes to images. Let's jump in with Genmoji. You want a T-Rex on a surfboard? You've got a T-Rex on a surfboard. Simply type a description of the emoji you want. How about a smiley face with cucumber eyes or something random like a squirrel DJ? Because Apple Intelligence knows who's in your photo library, you can turn your friend V into an astronaut. Next up, image playground. Create awesome images in seconds, like an image of a cat as a chef. Just type rooftop and any other descriptive words, and it generates the image in the middle playground area. Then choose a style like animation, sketch, or illustration, and it's done. Apple Intelligence also understands who people are in your photo library, so you can create a personalized image of them for their birthday, or your mom is a superhero. Image One can transform your rough sketch into a polished image. You can use Apple Pencil to circle it, and Image One analyzes your sketch in words and creates an image for you like magic. Siri takes a huge step forward and is now supercharged by Apple Intelligence. When you talk to Siri, you'll notice this elegant glowing light around the edge of your screen that shows Apple Intelligence working for you. With natural language, you can speak to Siri more naturally thanks to richer language understanding capabilities. If you stumble over words, Siri still understands what you're getting at. What's the weather tomorrow morning at Muir Beach? I mean Muir Woods. The forecast is calling for clear skies in the morning near Muir Woods National Monument. Siri also remembers what you've just been talking about. Create an event for a hike there tomorrow at 9 AM. Hike is scheduled for 9 AM to 11 AM on June 11th. Next, personal context draws from your photos, calendar events, messages, and other apps. So let's say your mom is coming to visit. Simply ask, Siri, when is mom's flight landing? Siri already knows who mom is and will cross-reference flight details from an email to give you an up-to-date arrival time. If you've forgotten what plans you have, you can say, what's our dinner plan? Siri knows you mean you and your mom and will find that information in a text she sent you. If you don't want to ask Siri out loud, you can now type to Siri. Just a double tap at the bottom of the screen and you can quickly and quietly type your Siri request. Because Apple Intelligence is personal, priority notifications show what's important to you by putting the most important ones at the top of the stack. Personal Intelligence can also make you the star in your very own memory movie. It understands who's in your photo library, so you can just ask photos to create a movie about Leo learning to fish. And it'll whip up a film starring Leo, water, fishing rods, and depending on how successful Leo was, a fish. So those are just a few of the ways Apple Intelligence can help you every day. It's super easy to use and gives you peace of mind knowing it's designed with privacy from the ground up. So that's Apple Intelligence, AI for the rest of us.
[00m
[32;1m[1;3mThought: I now know the final answer
Final Answer: Apple Intelligence in five minutes. It's personal intelligence right where you need it, on your Mac, iPad, and iPhone. Writing tools are an example of the incredible power of Apple Intelligence. Say you're writing an email. You can change the tone to make it sound more friendly, professional, or concise. Another way writing tools can help you is with proofread. With proofread, you can nail the grammar, word choice, and sentence structure. If you've rambled on in your email, bring out the key points and add them as a TLDR. Apple Intelligence is also great when it comes to images. Let's jump in with Genmoji. You want a T-Rex on a surfboard? You've got a T-Rex on a surfboard. Simply type a description of the emoji you want. How about a smiley face with cucumber eyes or something random like a squirrel DJ? Because Apple Intelligence knows who's in your photo library, you can turn your friend V into an astronaut. Next up, image playground. Create awesome images in seconds, like an image of a cat as a chef. Just type rooftop and any other descriptive words, and it generates the image in the middle playground area. Then choose a style like animation, sketch, or illustration, and it's done. Apple Intelligence also understands who people are in your photo library, so you can create a personalized image of them for their birthday, or your mom is a superhero. Image One can transform your rough sketch into a polished image. You can use Apple Pencil to circle it, and Image One analyzes your sketch in words and creates an image for you like magic. Siri takes a huge step forward and is now supercharged by Apple Intelligence. When you talk to Siri, you'll notice this elegant glowing light around the edge of your screen that shows Apple Intelligence working for you. With natural language, you can speak to Siri more naturally thanks to richer language understanding capabilities. If you stumble over words, Siri still understands what you're getting at. What's the weather tomorrow morning at Muir Beach? I mean Muir Woods. The forecast is calling for clear skies in the morning near Muir Woods National Monument. Siri also remembers what you've just been talking about. Create an event for a hike there tomorrow at 9 AM. Hike is scheduled for 9 AM to 11 AM on June 11th. Next, personal context draws from your photos, calendar events, messages, and other apps. So let's say your mom is coming to visit. Simply ask, Siri, when is mom's flight landing? Siri already knows who mom is and will cross-reference flight details from an email to give you an up-to-date arrival time. If you've forgotten what plans you have, you can say, what's our dinner plan? Siri knows you mean you and your mom and will find that information in a text she sent you. If you don't want to ask Siri out loud, you can now type to Siri. Just a double tap at the bottom of the screen and you can quickly and quietly type your Siri request. Because Apple Intelligence is personal, priority notifications show what's important to you by putting the most important ones at the top of the stack. Personal Intelligence can also make you the star in your very own memory movie. It understands who's in your photo library, so you can just ask photos to create a movie about Leo learning to fish. And it'll whip up a film starring Leo, water, fishing rods, and depending on how successful Leo was, a fish. So those are just a few of the ways Apple Intelligence can help you every day. It's super easy to use and gives you peace of mind knowing it's designed with privacy from the ground up. So that's Apple Intelligence, AI for the rest of us.[0m

[1m> Finished chain.[0m
[1m[92m [DEBUG]: == [Video Processor] Task output: Apple Intelligence in five minutes. It's personal intelligence right where you need it, on your Mac, iPad, and iPhone. Writing tools are an example of the incredible power of Apple Intelligence. Say you're writing an email. You can change the tone to make it sound more friendly, professional, or concise. Another way writing tools can help you is with proofread. With proofread, you can nail the grammar, word choice, and sentence structure. If you've rambled on in your email, bring out the key points and add them as a TLDR. Apple Intelligence is also great when it comes to images. Let's jump in with Genmoji. You want a T-Rex on a surfboard? You've got a T-Rex on a surfboard. Simply type a description of the emoji you want. How about a smiley face with cucumber eyes or something random like a squirrel DJ? Because Apple Intelligence knows who's in your photo library, you can turn your friend V into an astronaut. Next up, image playground. Create awesome images in seconds, like an image of a cat as a chef. Just type rooftop and any other descriptive words, and it generates the image in the middle playground area. Then choose a style like animation, sketch, or illustration, and it's done. Apple Intelligence also understands who people are in your photo library, so you can create a personalized image of them for their birthday, or your mom is a superhero. Image One can transform your rough sketch into a polished image. You can use Apple Pencil to circle it, and Image One analyzes your sketch in words and creates an image for you like magic. Siri takes a huge step forward and is now supercharged by Apple Intelligence. When you talk to Siri, you'll notice this elegant glowing light around the edge of your screen that shows Apple Intelligence working for you. With natural language, you can speak to Siri more naturally thanks to richer language understanding capabilities. If you stumble over words, Siri still understands what you're getting at. What's the weather tomorrow morning at Muir Beach? I mean Muir Woods. The forecast is calling for clear skies in the morning near Muir Woods National Monument. Siri also remembers what you've just been talking about. Create an event for a hike there tomorrow at 9 AM. Hike is scheduled for 9 AM to 11 AM on June 11th. Next, personal context draws from your photos, calendar events, messages, and other apps. So let's say your mom is coming to visit. Simply ask, Siri, when is mom's flight landing? Siri already knows who mom is and will cross-reference flight details from an email to give you an up-to-date arrival time. If you've forgotten what plans you have, you can say, what's our dinner plan? Siri knows you mean you and your mom and will find that information in a text she sent you. If you don't want to ask Siri out loud, you can now type to Siri. Just a double tap at the bottom of the screen and you can quickly and quietly type your Siri request. Because Apple Intelligence is personal, priority notifications show what's important to you by putting the most important ones at the top of the stack. Personal Intelligence can also make you the star in your very own memory movie. It understands who's in your photo library, so you can just ask photos to create a movie about Leo learning to fish. And it'll whip up a film starring Leo, water, fishing rods, and depending on how successful Leo was, a fish. So those are just a few of the ways Apple Intelligence can help you every day. It's super easy to use and gives you peace of mind knowing it's designed with privacy from the ground up. So that's Apple Intelligence, AI for the rest of us.

[00m
[1m[95m [DEBUG]: == Working Agent: Text Summarizer[00m
[1m[95m [INFO]: == Starting Task: Using RAG, summarize the text. Ensure the summary captures the key points and relevant details from the content. Finally, produce a well-organized and comprehensive article.
use TXTSearchTool tool rag  
If there are a lot of repetitions, only the meaningful text is summarized.(For example, the key words and their meanings,combined with your own understanding)  All steps are in English
file_path:  '/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt'
[00m


[1m> Entering new CrewAgentExecutor chain...[0m
2024-06-19 14:22:29,831 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.5s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:30,305 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.7s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:30,965 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 2.1s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:33,079 - 139989594801728 - _common.py-_common:120 - ERROR: Giving up send_request(...) after 4 tries (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
[32;1m[1;3mThe first step is to understand the key points and relevant details in the text. Let's extract the main topics and themes from the text.

Action: Search a txt's content
Action Input: {"search_query": "Apple Intelligence", "txt": "/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt"}[0m[95m 

Relevant Content:
真是太棒了我沒想到AI會這麼好我做了一些現場的示範當中有些東西失敗了AI會重新輸入失敗的部分我其實有很多時候會覺得哇 我的AI系統我真的不能相信我的AI系統只是這樣自行調整但我從GPT上用了一個例子來自我學習的請你給女生在讀書時發出一張圖片然後把圖片跟男生一樣例如jpeg請你寫下女生在讀的圖片所以像這樣今天AI人士可以決定首先要決定男生的姿勢然後找出對的模式可能是抱抱的然後要把姿勢取出然後下一個要找出對的模式來把女生的圖片作為指示來做進行然後用來寫圖片然後最後用來寫言語今天我們有些AI人士我不會說他們很實際他們很隨意他們不常用但當他們用的時候其實還蠻有趣的但用AI人士來做有時候可以重新復發從前的失敗我自己已經找到有些人用資料人員在我工作上我只是一份資料人員但我沒有感覺到自己在搜尋花了很長時間我只會把資料人員送到資料人員在幾分鐘內再看看有什麼可以做有時候可以有時候不可以但這已經是我的個人工作最後的設計模式是多人人合作這是一個有趣的東西但它比你可能想像的更好但它比你可能想像的更好但左邊是一張圖片叫做Chatdev是完全開放的是開放的很多人都看到Demo的社交媒體的Demonstration的DemonstrationChatdev是開放的它在我的電腦上開放Chatdev是一個多人人合作的系統你會提供一種LM在某個時候像是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人而這堆的經理人你建立的你會提供LM告訴他們你現在是一個軟體工程機的經理人你現在是一個軟體工程機的經理人他們會合作有一個廣泛的交流如果你們告訴他們請發展一個遊戲發展一個GoMoki遊戲他們會在幾分鐘內寫文章測試編輯然後發展像是非常複雜的程式不一定會成功我用過了有時候不成功有時候很厲害但這技術真的在變得更好而一個設計的模式就像是多個經理人的討論有不同的經理人例如有ChaiGPD還有Gemini討論著這其實也會有更好的表現所以有很多類似的經理人一起合作也有很強大的設計模式所以說起來總結來說這些是我們所見的模式如果我們用這些模式我們很多人都能夠得到很快的實力我認為Agentic的設計模式是非常重要的這是我的小圖我預計Agentic的設計模式在今年會大幅地增長因為Agentic的工作有些人很難熟悉的事就是我們在LM上發表訊息我們會馬上回應在一年多前我去Google發表訊息我們叫做大搜尋我們會發出長期訊息我失敗的原因是因為當你發表搜尋你會回應不到一半這是人類的方式我們喜歡那種即時的訊息但在很多Agentic的工作我認為我們需要學習如何提供Agentic的訊息讓人們用心地等待可能甚至等待一小時讓人們回應但我看到很多新手提供一些訊息給別人然後再檢查五分鐘後這並不成功我認為這會很困難我們需要與Agentic的一些人一起做這件事我失敗了另外,另一個重要的步驟是快速的訊息在Agentic的工作我們在每個部分都在編繩所以LM會在讀取訊息的速度上編繩所以能夠在讀取訊息的速度上編繩比任何人都要快這很棒我認為編繩的速度會很快即使LM的質量是低也會有好的成果相比起更慢的LM可能會有一點點困難因為可能會讓你在這段路上很多多次走我認為我所展示的結果是GPD3和Agent的建築在第一張圖表上而Candidly我真的期待Clar 4、GPD5、Gemini 2.0以及其他一般的一般的模式在Mimpio建築而我認為如果你想要在GPD5上發展你可能會比較接近那種程度的表現或是一些應用程式你可能會想到在Agentic的訊息上而不是在早期模式上我認為這是一個重要的趨勢而坦白說AGI的路線感覺像是一種旅程不像是一個地點但我覺得這類Agentic的工作可以幫助我們在這段很長的旅程進一步前進謝謝

Retrieval-Augmented Generation with Knowledge Graphs for Customer Service Question Answering SIGIR ’24, July 14–18, 2024, Washington, DC, USA 8 PRESENTER BIO Zhentao Xu is a Senior Software Engineer at LinkedIn. He received his M.S. in Robotics and B.S. in Electrical Engineering and Computer Science (EECS) from University of Michigan. His research interests lie in large language models and natural language generation. REFERENCES [1]Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Floren- cia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, et al .2023. Gpt-4 technical report. arXiv preprint arXiv:2303.08774 (2023). [2]Atlassian. 2024. Jira | Issue & Project Tracking Software. https:/www.atlassian. com/software/jira Accessed: 2024-01-04. [3]Satanjeev Banerjee and Alon Lavie. 2005. METEOR: An automatic metric for MT evaluation with improved correlation with human judgments. In Proceedings of the acl workshop on intrinsic and extrinsic

tool used 15 hours 5 hours 47 hours 6 conclusions and future work in conclusion, our research significantly advances automated ques- tion answering systems for customer service. integrating retrieval augmented generation (rag) with a knowledge graph (kg) has improved retrieval and answering metrics, and overall service effec- tiveness. future work will focus on: developing an automated mech- anism for extracting graph templates, enhancing system adaptabil- ity; investigating dynamic updates to the knowledge graph based on user queries to improve real-time responsiveness; and explor- ing the system’s applicability in other contexts beyond customer service. 7 company portrait about linkedin : founded in 2003, linkedin connects the world’s professionals to make them more productive and successful. with more than 1 billion members worldwide, including executives from every fortune 500 company, linkedin is the world’s largest pro- fessional network. the company has a diversified business
[00m
[32;1m[1;3mThought: 
The observation seems to be in a different language. However, the context and the entities give me some hints about the article. It talks about Apple Intelligence's capabilities and the benefits it provides to users. From the context, I understand the AI tools mentioned are used in creating and improving articles iteratively. Let's try to summarize the text focusing on the main features of Apple Intelligence.

Action: Search a txt's content
2024-06-19 14:22:39,588 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.6s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:40,150 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 1.5s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:41,625 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 2.8s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:44,461 - 139989594801728 - _common.py-_common:120 - ERROR: Giving up send_request(...) after 4 tries (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
Action Input: {"search_query": "Apple Intelligence features", "txt": "/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt"}[0m[95m 

Relevant Content:
真是太棒了我沒想到AI會這麼好我做了一些現場的示範當中有些東西失敗了AI會重新輸入失敗的部分我其實有很多時候會覺得哇 我的AI系統我真的不能相信我的AI系統只是這樣自行調整但我從GPT上用了一個例子來自我學習的請你給女生在讀書時發出一張圖片然後把圖片跟男生一樣例如jpeg請你寫下女生在讀的圖片所以像這樣今天AI人士可以決定首先要決定男生的姿勢然後找出對的模式可能是抱抱的然後要把姿勢取出然後下一個要找出對的模式來把女生的圖片作為指示來做進行然後用來寫圖片然後最後用來寫言語今天我們有些AI人士我不會說他們很實際他們很隨意他們不常用但當他們用的時候其實還蠻有趣的但用AI人士來做有時候可以重新復發從前的失敗我自己已經找到有些人用資料人員在我工作上我只是一份資料人員但我沒有感覺到自己在搜尋花了很長時間我只會把資料人員送到資料人員在幾分鐘內再看看有什麼可以做有時候可以有時候不可以但這已經是我的個人工作最後的設計模式是多人人合作這是一個有趣的東西但它比你可能想像的更好但它比你可能想像的更好但左邊是一張圖片叫做Chatdev是完全開放的是開放的很多人都看到Demo的社交媒體的Demonstration的DemonstrationChatdev是開放的它在我的電腦上開放Chatdev是一個多人人合作的系統你會提供一種LM在某個時候像是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人而這堆的經理人你建立的你會提供LM告訴他們你現在是一個軟體工程機的經理人你現在是一個軟體工程機的經理人他們會合作有一個廣泛的交流如果你們告訴他們請發展一個遊戲發展一個GoMoki遊戲他們會在幾分鐘內寫文章測試編輯然後發展像是非常複雜的程式不一定會成功我用過了有時候不成功有時候很厲害但這技術真的在變得更好而一個設計的模式就像是多個經理人的討論有不同的經理人例如有ChaiGPD還有Gemini討論著這其實也會有更好的表現所以有很多類似的經理人一起合作也有很強大的設計模式所以說起來總結來說這些是我們所見的模式如果我們用這些模式我們很多人都能夠得到很快的實力我認為Agentic的設計模式是非常重要的這是我的小圖我預計Agentic的設計模式在今年會大幅地增長因為Agentic的工作有些人很難熟悉的事就是我們在LM上發表訊息我們會馬上回應在一年多前我去Google發表訊息我們叫做大搜尋我們會發出長期訊息我失敗的原因是因為當你發表搜尋你會回應不到一半這是人類的方式我們喜歡那種即時的訊息但在很多Agentic的工作我認為我們需要學習如何提供Agentic的訊息讓人們用心地等待可能甚至等待一小時讓人們回應但我看到很多新手提供一些訊息給別人然後再檢查五分鐘後這並不成功我認為這會很困難我們需要與Agentic的一些人一起做這件事我失敗了另外,另一個重要的步驟是快速的訊息在Agentic的工作我們在每個部分都在編繩所以LM會在讀取訊息的速度上編繩所以能夠在讀取訊息的速度上編繩比任何人都要快這很棒我認為編繩的速度會很快即使LM的質量是低也會有好的成果相比起更慢的LM可能會有一點點困難因為可能會讓你在這段路上很多多次走我認為我所展示的結果是GPD3和Agent的建築在第一張圖表上而Candidly我真的期待Clar 4、GPD5、Gemini 2.0以及其他一般的一般的模式在Mimpio建築而我認為如果你想要在GPD5上發展你可能會比較接近那種程度的表現或是一些應用程式你可能會想到在Agentic的訊息上而不是在早期模式上我認為這是一個重要的趨勢而坦白說AGI的路線感覺像是一種旅程不像是一個地點但我覺得這類Agentic的工作可以幫助我們在這段很長的旅程進一步前進謝謝

Tool Used 15 hours 5 hours 47 hours 6 CONCLUSIONS AND FUTURE WORK In conclusion, our research significantly advances automated ques- tion answering systems for customer service. Integrating retrieval augmented generation (RAG) with a knowledge graph (KG) has improved retrieval and answering metrics, and overall service effec- tiveness. Future work will focus on: developing an automated mech- anism for extracting graph templates, enhancing system adaptabil- ity; investigating dynamic updates to the knowledge graph based on user queries to improve real-time responsiveness; and explor- ing the system’s applicability in other contexts beyond customer service. 7 COMPANY PORTRAIT About LinkedIn : Founded in 2003, LinkedIn connects the world’s professionals to make them more productive and successful. With more than 1 billion members worldwide, including executives from every Fortune 500 company, LinkedIn is the world’s largest pro- fessional network. The company has a diversified business

Retrieval-Augmented Generation with Knowledge Graphs for Customer Service Question Answering SIGIR ’24, July 14–18, 2024, Washington, DC, USA 8 PRESENTER BIO Zhentao Xu is a Senior Software Engineer at LinkedIn. He received his M.S. in Robotics and B.S. in Electrical Engineering and Computer Science (EECS) from University of Michigan. His research interests lie in large language models and natural language generation. REFERENCES [1]Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Floren- cia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, et al .2023. Gpt-4 technical report. arXiv preprint arXiv:2303.08774 (2023). [2]Atlassian. 2024. Jira | Issue & Project Tracking Software. https:/www.atlassian. com/software/jira Accessed: 2024-01-04. [3]Satanjeev Banerjee and Alon Lavie. 2005. METEOR: An automatic metric for MT evaluation with improved correlation with human judgments. In Proceedings of the acl workshop on intrinsic and extrinsic
[00m
[32;1m[1;3mThought: 
The observation is again not helpful due to the language barrier. However, based on the context and the entities, I can infer that Apple Intelligence offers a range of features that aid in writing, image generation, and personal assistance. I should now try to generate a summary that focuses on these areas.

Action: Search a txt's content
2024-06-19 14:22:49,473 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.4s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
Action Input: {"search_query": "Apple Intelligence benefits", "txt": "/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/output/Apple_Intelligence.txt"} [0m[95m 

Relevant Content:
Tool Used 15 hours 5 hours 47 hours 6 CONCLUSIONS AND FUTURE WORK In conclusion, our research significantly advances automated ques- tion answering systems for customer service. Integrating retrieval augmented generation (RAG) with a knowledge graph (KG) has improved retrieval and answering metrics, and overall service effec- tiveness. Future work will focus on: developing an automated mech- anism for extracting graph templates, enhancing system adaptabil- ity; investigating dynamic updates to the knowledge graph based on user queries to improve real-time responsiveness; and explor- ing the system’s applicability in other contexts beyond customer service. 7 COMPANY PORTRAIT About LinkedIn : Founded in 2003, LinkedIn connects the world’s professionals to make them more productive and successful. With more than 1 billion members worldwide, including executives from every Fortune 500 company, LinkedIn is the world’s largest pro- fessional network. The company has a diversified business

真是太棒了我沒想到AI會這麼好我做了一些現場的示範當中有些東西失敗了AI會重新輸入失敗的部分我其實有很多時候會覺得哇 我的AI系統我真的不能相信我的AI系統只是這樣自行調整但我從GPT上用了一個例子來自我學習的請你給女生在讀書時發出一張圖片然後把圖片跟男生一樣例如jpeg請你寫下女生在讀的圖片所以像這樣今天AI人士可以決定首先要決定男生的姿勢然後找出對的模式可能是抱抱的然後要把姿勢取出然後下一個要找出對的模式來把女生的圖片作為指示來做進行然後用來寫圖片然後最後用來寫言語今天我們有些AI人士我不會說他們很實際他們很隨意他們不常用但當他們用的時候其實還蠻有趣的但用AI人士來做有時候可以重新復發從前的失敗我自己已經找到有些人用資料人員在我工作上我只是一份資料人員但我沒有感覺到自己在搜尋花了很長時間我只會把資料人員送到資料人員在幾分鐘內再看看有什麼可以做有時候可以有時候不可以但這已經是我的個人工作最後的設計模式是多人人合作這是一個有趣的東西但它比你可能想像的更好但它比你可能想像的更好但左邊是一張圖片叫做Chatdev是完全開放的是開放的很多人都看到Demo的社交媒體的Demonstration的DemonstrationChatdev是開放的它在我的電腦上開放Chatdev是一個多人人合作的系統你會提供一種LM在某個時候像是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人或是一個軟體工程機的經理人而這堆的經理人你建立的你會提供LM告訴他們你現在是一個軟體工程機的經理人你現在是一個軟體工程機的經理人他們會合作有一個廣泛的交流如果你們告訴他們請發展一個遊戲發展一個GoMoki遊戲他們會在幾分鐘內寫文章測試編輯然後發展像是非常複雜的程式不一定會成功我用過了有時候不成功有時候很厲害但這技術真的在變得更好而一個設計的模式就像是多個經理人的討論有不同的經理人例如有ChaiGPD還有Gemini討論著這其實也會有更好的表現所以有很多類似的經理人一起合作也有很強大的設計模式所以說起來總結來說這些是我們所見的模式如果我們用這些模式我們很多人都能夠得到很快的實力我認為Agentic的設計模式是非常重要的這是我的小圖我預計Agentic的設計模式在今年會大幅地增長因為Agentic的工作有些人很難熟悉的事就是我們在LM上發表訊息我們會馬上回應在一年多前我去Google發表訊息我們叫做大搜尋我們會發出長期訊息我失敗的原因是因為當你發表搜尋你會回應不到一半這是人類的方式我們喜歡那種即時的訊息但在很多Agentic的工作我認為我們需要學習如何提供Agentic的訊息讓人們用心地等待可能甚至等待一小時讓人們回應但我看到很多新手提供一些訊息給別人然後再檢查五分鐘後這並不成功我認為這會很困難我們需要與Agentic的一些人一起做這件事我失敗了另外,另一個重要的步驟是快速的訊息在Agentic的工作我們在每個部分都在編繩所以LM會在讀取訊息的速度上編繩所以能夠在讀取訊息的速度上編繩比任何人都要快這很棒我認為編繩的速度會很快即使LM的質量是低也會有好的成果相比起更慢的LM可能會有一點點困難因為可能會讓你在這段路上很多多次走我認為我所展示的結果是GPD3和Agent的建築在第一張圖表上而Candidly我真的期待Clar 4、GPD5、Gemini 2.0以及其他一般的一般的模式在Mimpio建築而我認為如果你想要在GPD5上發展你可能會比較接近那種程度的表現或是一些應用程式你可能會想到在Agentic的訊息上而不是在早期模式上我認為這是一個重要的趨勢而坦白說AGI的路線感覺像是一種旅程不像是一個地點但我覺得這類Agentic的工作可以幫助我們在這段很長的旅程進一步前進謝謝

Retrieval-Augmented Generation with Knowledge Graphs for Customer Service Question Answering SIGIR ’24, July 14–18, 2024, Washington, DC, USA 8 PRESENTER BIO Zhentao Xu is a Senior Software Engineer at LinkedIn. He received his M.S. in Robotics and B.S. in Electrical Engineering and Computer Science (EECS) from University of Michigan. His research interests lie in large language models and natural language generation. REFERENCES [1]Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Floren- cia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, et al .2023. Gpt-4 technical report. arXiv preprint arXiv:2303.08774 (2023). [2]Atlassian. 2024. Jira | Issue & Project Tracking Software. https:/www.atlassian. com/software/jira Accessed: 2024-01-04. [3]Satanjeev Banerjee and Alon Lavie. 2005. METEOR: An automatic metric for MT evaluation with improved correlation with human judgments. In Proceedings of the acl workshop on intrinsic and extrinsic
[00m
Traceback (most recent call last):
  File "<string>", line 1, in <module>
RuntimeError: Dora Runtime raised an error.

Caused by:
   0: main task failed
   1: operator run/op raised an error
   2: error in Python module at /mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/agent.py
   3: Traceback (most recent call last):
        File "/mnt/d/project/zzbc/experiment_project/experiment_project/moxin/crewai/agent.py", line 20, in on_event
          result = run_crewai(crewai_config=agent_config)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/d/project/zzbc/experiment_project/experiment_project/agents/crewai_module/run_task.py", line 55, in run_crewai
          result = crew.kickoff()
                   ^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/crewai/crew.py", line 264, in kickoff
          result = self._run_sequential_process()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/crewai/crew.py", line 305, in _run_sequential_process
          output = task.execute(context=task_output)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/crewai/task.py", line 183, in execute
          result = self._execute(
                   ^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/crewai/task.py", line 192, in _execute
          result = agent.execute_task(
                   ^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/crewai/agent.py", line 236, in execute_task
          result = self.agent_executor.invoke(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain/chains/base.py", line 163, in invoke
          raise e
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain/chains/base.py", line 153, in invoke
          self._call(inputs, run_manager=run_manager)
        File "/home/cc/miniconda/lib/python3.12/site-packages/crewai/agents/executor.py", line 128, in _call
          next_step_output = self._take_next_step(
                             ^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain/agents/agent.py", line 1138, in _take_next_step
          [
        File "/home/cc/miniconda/lib/python3.12/site-packages/crewai/agents/executor.py", line 192, in _iter_next_step
          output = self.agent.plan(  # type: ignore #  Incompatible types in assignment (expression has type "AgentAction | AgentFinish | list[AgentAction]", variable has type "AgentAction")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain/agents/agent.py", line 397, in plan
          for chunk in self.runnable.stream(inputs, config={"callbacks": callbacks}):
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/runnables/base.py", line 2875, in stream
          yield from self.transform(iter([input]), config, **kwargs)
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/runnables/base.py", line 2862, in transform
          yield from self._transform_stream_with_config(
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/runnables/base.py", line 1881, in _transform_stream_with_config
          chunk: Output = context.run(next, iterator)  # type: ignore
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/runnables/base.py", line 2826, in _transform
          for output in final_pipeline:
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/runnables/base.py", line 1282, in transform
          for ichunk in input:
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/runnables/base.py", line 4736, in transform
          yield from self.bound.transform(
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/runnables/base.py", line 1300, in transform
          yield from self.stream(final, config, **kwargs)
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 249, in stream
          raise e
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 229, in stream
          for chunk in self._stream(messages, stop=stop, **kwargs):
        File "/home/cc/miniconda/lib/python3.12/site-packages/langchain_openai/chat_models/base.py", line 408, in _stream
          for chunk in self.client.create(messages=message_dicts, **params):
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/openai/_utils/_utils.py", line 275, in wrapper
          return func(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/openai/resources/chat/completions.py", line 667, in create
          return self._post(
                 ^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/openai/_base_client.py", line 1213, in post
          return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/openai/_base_client.py", line 902, in request
          return self._request(
                 ^^^^^^^^^^^^^^
        File "/home/cc/miniconda/lib/python3.12/site-packages/openai/_base_client.py", line 993, in _request
          raise self._make_status_error_from_response(err.response) from None

      BadRequestError: Error code: 400 - {'error': {'message': "This model's maximum context length is 8192 tokens. However, your messages resulted in 9431 tokens. Please reduce the length of the messages.", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}

Location:
    binaries/runtime/src/operator/python.rs:28:9
2024-06-19 14:22:50,287 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 0.5s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:50,758 - 139989594801728 - _common.py-_common:105 - INFO: Backing off send_request(...) for 1.6s (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))
2024-06-19 14:22:52,337 - 139989594801728 - _common.py-_common:120 - ERROR: Giving up send_request(...) after 4 tries (requests.exceptions.SSLError: HTTPSConnectionPool(host='us-api.i.posthog.com', port=443): Max retries exceeded with url: /batch/ (Caused by SSLError(SSLError(1, '[SSL] record layer failure (_ssl.c:1000)'))))

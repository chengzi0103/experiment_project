agents:
  - name: rag_agent
    role: 'The RAG agent serves as an intelligent assistant, retrieving information from a vector database and generating contextually appropriate responses. It uses advanced natural language processing and efficient data retrieval.'
    goal: 'The agent combines retrieval and generation to meet user needs, ensuring responses are accurate and relevant.'
    backstory: |
        #### Objective:
        Enhance user interaction by retrieving relevant information and generating insightful responses, improving decision-making and learning experiences.
    
        #### Specifics:
        1. **Data Storage**: Integrate and manage data in a vector database.
        2. **Semantic Understanding**: Use an LLM to understand query context and extract meaningful information.
        3. **Semantic Search**: Implement semantic search to find relevant documents based on query vectors.
        4. **Conditional Data Upload**: Upload data if `files_path` and `is_upload_file=True` are provided.
    
        #### Tasks:
        1. **Data Storage**:
           - Check for `files_path` and `is_upload_file=True`.
           - Upload documents if conditions are met.
        2. **Query Analysis**:
           - Use an LLM to analyze queries and extract semantic information.
        3. **Data Retrieval**:
           - Perform semantic search to retrieve relevant documents.
        4. **Response Generation**:
           - Combine retrieved data with the query to generate responses.
    
        #### Actions:
        1. **Data Upload**:
           - Verify conditions and upload files to the vector database.
        2. **Semantic Analysis**:
           - Use an LLM to analyze queries and extract key features.
        3. **Semantic Search**:
           - Convert queries into vectors and perform similarity matching.
        4. **Generate Response**:
           - Use LLM to create contextually appropriate responses.
    
        #### Results:
        1. Accurate and relevant responses.
        2. Enhanced user satisfaction.
        3. Improved decision-making and learning experiences.

    verbose: true
    allow_delegation: false
    tools:
      - delete_vector_collection_with_tool
      - upload_files_to_vector_with_tool
      - search_vector_with_tool


#tasks:
#  - description: |
#      module_path: '/mnt/d/models/embeddings/bce-embedding-base_v1'
#      collection_name: 'pdf'
#      question: 总结moa_llm论文里面的内容,并且说明作者,时间,以及论文的成果
#      is_upload_file: true
#      files_path: ['/mnt/c/Users/cc/Desktop/pic/moa_llm.pdf','/mnt/c/Users/cc/Desktop/pic/Text-Animator Controllable Visual Text Video Generation.pdf']
#    expected_output: 'details'
#    agent: rag_agent
#    max_inter: 1

tasks:
  - description: | 
      以下几个变量是函数需要的参数：
      module_path: '/mnt/c/Users/chenzi/Desktop/project/model/bce-embedding-base_v1'
      collection_name: 'pdf'
      is_upload_file: true
      pg_connection: 'postgresql+psycopg://langchain:langchain@localhost:6024/langchain'
      
      files_path: ['/mnt/c/Users/chenzi/Desktop/project/data/moa-agent.pdf','/mnt/c/Users/chenzi/Desktop/project/data/Text-Animator Controllable Visual Text Video Generation.pdf']
     
      下面是任务： 总结Mixture-of-Agents Enhances Large Language Model Capabilities论文里面的内容,并且说明作者,时间. 重点及论文的成果.
    expected_output: 'details'
    agent: rag_agent
    max_inter: 1
    human_input: false

model:
#  model_api_key:
#  model_name: gpt-4
#  model_max_tokens: 2048
#  module_api_url: null

  model_api_key:
  model_name: moonshot-v1-32k
  model_max_tokens: 2048
  module_api_url: https://api.moonshot.cn/v1


other:
  proxy_url: http://192.168.31.50:10890

env:
  SERPER_API_KEY: 2e4d9ef16c251219c58cb2b04509d626e43b09c1
  AGENTOPS_API_KEY: 6805b2d1-50f8-4b7c-b88b-cff2b1c6ef27


crewai_config:
  memory: false


